diff --git a/cdot.js b/cdot.js
index 51313a3..ccb478f 100644
--- a/cdot.js
+++ b/cdot.js
@@ -3,6 +3,6 @@
 let lex = require("./lex");
 let parse = require("./parse");
 
-let tokens = lex("fn fact .1..?, prod., map $fact 1..10");
+let tokens = lex(`1p2`);
 //console.log(tokens);
-console.log(JSON.stringify(parse(tokens)));
\ No newline at end of file
+console.log(JSON.stringify(parse(tokens), null, "\t"));
\ No newline at end of file
diff --git a/lex.js b/lex.js
index d164fe1..bdce173 100644
--- a/lex.js
+++ b/lex.js
@@ -3,9 +3,23 @@
 let keywords = [
 	"fn", "store", "args",
 	"if", "elif", "else",
-	"for", "while", "repeat"
+	"for", "while", "repeat",
+	// Operator equivalents
+	"p", "m", "n", "t", "d", "e", "mod", "div",
+	"to", "at",
+	"eq", "ne", "lt", "gt", "le", "ge",
+	"and", "or", "not",
+	"is", "set"
 ];
 
+let op_keywords = {
+	p: "+", m: "-", n: "~", t: "*", d: "/", e: "^", mod: "%", div: "%%",
+	to: "..", at: "@",
+	eq: "==", ne: "!=", lt: "<", gt: ">", le: "<=", ge: ">=",
+	and: "&", or: "|", not: "!",
+	is: "=", set: "<-"
+};
+
 let long_ops = ["<-", "%%", "..", "<=", ">=", "==", "!="];
 
 function lex(prog) {
@@ -30,15 +44,18 @@ function lex(prog) {
 	function expect_sym() {
 		let end = i + 1;
 		
-		while(/[A-Za-z_0-9]/.test(prog[end]) && end < prog.length)
+		while(/[A-Za-z_]/.test(prog[end]) && end < prog.length)
 			end++;
 		
 		let sym = prog.substring(i, end);
 		i = end;
 		
-		if(keywords.includes(sym))
-			return {type: sym};
-		else
+		if(keywords.includes(sym)) {
+			if(op_keywords[sym])
+				return {type: op_keywords[sym]};
+			else
+				return {type: sym};
+		} else
 			return {type: "name", data: sym};
 	}
 	
